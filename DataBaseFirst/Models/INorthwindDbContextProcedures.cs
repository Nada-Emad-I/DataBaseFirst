// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
#nullable disable
using DataBaseFirst.Models;
using Microsoft.Data.SqlClient;
using Microsoft.EntityFrameworkCore;
using System;
using System.Collections.Generic;
using System.Data;
using System.Threading;
using System.Threading.Tasks;

namespace DataBaseFirst.Models
{
    public partial interface INorthwindDbContextProcedures
    {
        Task<List<CustOrderHistResult>> CustOrderHistAsync(string customerID, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<CustOrdersDetailResult>> CustOrdersDetailAsync(int? orderID, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<CustOrdersOrdersResult>> CustOrdersOrdersAsync(string customerID, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> DeleteCategoryByCategoryIDAsync(int? categoryID, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> DeleteEmployeeByIDAsync(int? employeeID, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> DeleteProductByIDAsync(int? productId, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<DiscontinuedProductsResult>> DiscontinuedProductsAsync(OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<EmployeeSalesbyCountryResult>> EmployeeSalesbyCountryAsync(DateTime? beginning_Date, DateTime? ending_Date, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> NewProductDeleteCommandAsync(int? original_ProductID, string original_ProductName, int? isNull_SupplierID, int? original_SupplierID, int? isNull_CategoryID, int? original_CategoryID, int? isNull_QuantityPerUnit, string original_QuantityPerUnit, int? isNull_UnitPrice, decimal? original_UnitPrice, int? isNull_UnitsInStock, short? original_UnitsInStock, int? isNull_UnitsOnOrder, short? original_UnitsOnOrder, int? isNull_ReorderLevel, short? original_ReorderLevel, bool? original_Discontinued, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<NewProductInsertCommandResult>> NewProductInsertCommandAsync(string productName, int? supplierID, int? categoryID, string quantityPerUnit, decimal? unitPrice, short? unitsInStock, short? unitsOnOrder, short? reorderLevel, bool? discontinued, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<NewProductSelectCommandResult>> NewProductSelectCommandAsync(OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<NewProductUpdateCommandResult>> NewProductUpdateCommandAsync(string productName, int? supplierID, int? categoryID, string quantityPerUnit, decimal? unitPrice, short? unitsInStock, short? unitsOnOrder, short? reorderLevel, bool? discontinued, int? original_ProductID, string original_ProductName, int? isNull_SupplierID, int? original_SupplierID, int? isNull_CategoryID, int? original_CategoryID, int? isNull_QuantityPerUnit, string original_QuantityPerUnit, int? isNull_UnitPrice, decimal? original_UnitPrice, int? isNull_UnitsInStock, short? original_UnitsInStock, int? isNull_UnitsOnOrder, short? original_UnitsOnOrder, int? isNull_ReorderLevel, short? original_ReorderLevel, bool? original_Discontinued, int? productID, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> PrdsDeleteCommandAsync(int? original_ProductID, string original_ProductName, int? isNull_SupplierID, int? original_SupplierID, int? isNull_CategoryID, int? original_CategoryID, int? isNull_QuantityPerUnit, string original_QuantityPerUnit, int? isNull_UnitPrice, decimal? original_UnitPrice, int? isNull_UnitsInStock, short? original_UnitsInStock, int? isNull_UnitsOnOrder, short? original_UnitsOnOrder, int? isNull_ReorderLevel, short? original_ReorderLevel, bool? original_Discontinued, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<PrdsInsertCommandResult>> PrdsInsertCommandAsync(string productName, int? supplierID, int? categoryID, string quantityPerUnit, decimal? unitPrice, short? unitsInStock, short? unitsOnOrder, short? reorderLevel, bool? discontinued, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<PrdsSelectCommandResult>> PrdsSelectCommandAsync(OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<PrdsUpdateCommandResult>> PrdsUpdateCommandAsync(string productName, int? supplierID, int? categoryID, string quantityPerUnit, decimal? unitPrice, short? unitsInStock, short? unitsOnOrder, short? reorderLevel, bool? discontinued, int? original_ProductID, string original_ProductName, int? isNull_SupplierID, int? original_SupplierID, int? isNull_CategoryID, int? original_CategoryID, int? isNull_QuantityPerUnit, string original_QuantityPerUnit, int? isNull_UnitPrice, decimal? original_UnitPrice, int? isNull_UnitsInStock, short? original_UnitsInStock, int? isNull_UnitsOnOrder, short? original_UnitsOnOrder, int? isNull_ReorderLevel, short? original_ReorderLevel, bool? original_Discontinued, int? productID, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<SalesbyYearResult>> SalesbyYearAsync(DateTime? beginning_Date, DateTime? ending_Date, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<SalesByCategoryResult>> SalesByCategoryAsync(string categoryName, string ordYear, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<SelectAllCategoriesResult>> SelectAllCategoriesAsync(OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<SelectALLEmployeesResult>> SelectALLEmployeesAsync(OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<SelectAllProductsResult>> SelectAllProductsAsync(OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<TenMostExpensiveProductsResult>> TenMostExpensiveProductsAsync(OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<TestPrdResult>> TestPrdAsync(OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> UpdateProductNameByProductIDAsync(int? productID, string productName, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
    }
}
